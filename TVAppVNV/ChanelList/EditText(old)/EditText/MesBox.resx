<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6wqsugL/BrwuW7Iwx6L4AAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="toolTip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="noButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>